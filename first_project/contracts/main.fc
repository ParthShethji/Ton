#include "imports/stdlib.fc";


() recv_internal(int msg_value, cell in_msg, slice in_msg_body) impure {
;; slice is part of the cell

;; Parsing in_msg as we need to first understand what kind of internal message we've received

	slice cs = in_msg.begin_parse(); ;;read first 4 bits as they are opcodes for flags
	int flags = cs~load_uint(4);  ;; if nothring we would get exit code 9
    slice sender_address = cs~load_msg_addr();

;; In order to store the same data in our c4 persistent storage, we are going to use FunC standard function set_data. This function is accepting and storing a Cell. If we want to store more data then fits into a Cell, we can easily write a "link" to another Cell inside of the first one. Such a link is called ref. We can write up to 4 refs into a Cell.

    set_data(begin_cell().store_slice(sender_address).end_cell());
    
}


;; Getter functions are placed ouside of the recv_internal function
slice get_the_latest_sender() method_id {
    slice ds = get_data().begin_parse();
    return ds~load_msg_addr();
}